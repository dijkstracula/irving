#lang ivy1.8

include numbers
include collections
include network

type pid = {0..1}

class msg_t = {
    action handle(self: msg_t)
}

subclass ping_t of msg_t = {
    field src: pid
    field dst: pid
    field ping_val: unbounded_sequence

    action handle(msg: ping_t)
}

subclass pong_t of msg_t = {
    field src: pid
    field dst: pid
    field pong_val: unbounded_sequence

    action handle(msg: pong_t)
}

instance net : tcp.net(msg_t)

process proc(self: pid) = {
    instance sock : net.socket

    after init {
        #sock := net.dial(self)
    }

    implement sock.recv(src:tcp.endpoint, msg: msg_t) {
        msg.handle()
    }

    implement ping_t.handle {
        var resp: pong_t;
        resp.src := self;
        resp.dst := msg.src;
        resp.pong_val := msg.ping_val;

        sock.send(proc(resp.dst).sock.id, resp);
    }

    implement pong_t.handle {
        var resp: ping_t;
        resp.src := self;
        resp.dst := msg.src;
        resp.ping_val := msg.pong_val + 1;
        
        sock.send(proc(resp.dst).sock.id, resp);
    }
}
