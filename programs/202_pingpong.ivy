#lang ivy1.8

include collections
include network

type pid = {0..1}

type msg_type = {
    ping_kind,
    pong_kind
}

class msg_t = {
    field typ: msg_type

    field src: pid
    field dst: pid
    field ping_val: nat
}

instance net : tcp.net(msg_t)

process proc(self: pid) = {
    instance sock : net.socket

    after init {
        #sock := net.dial(self)
    }

    implement sock.recv(src:tcp.endpoint, msg: msg_t) {
        if msg.typ = ping_kind {
            msg.typ := pong_kind;
        } else {
            msg.typ := ping_kind;
        }
        msg.dst := msg.src;
        msg.src := self;
        sock.send(proc(msg.dst).sock.id, msg);
    }
}

